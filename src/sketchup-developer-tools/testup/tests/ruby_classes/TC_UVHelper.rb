# Copyright:: Copyright 2012 Trimble Navigation Ltd.
# License:: Apache License version 2.0
# Original Author:: Scott Lininger 
#
# Tests the SketchUp Ruby API UVHelper object.
#
# This file was originally generated by ourdoc.rb, an internal tool we developed
# specifically for outputting support files (documentation, unit tests, etc.)
# from the standard, doxygen-style c++ comments that are embedded into the
# Ruby implementation files. You can find ourdoc.rb alongside these
# implementation files at:
#
# googleclient/sketchup/source/sketchup/ruby
#

require 'test/unit'

# TC_UVHelper contains unit tests for the UVHelper class.
#
# API Object::       UVHelper
# C++ File::         ruvhelper.cpp
# Parent Class::     Object
# Version::          SketchUp 6.0
#
# The UV Helper class contains methods allowing you to determine the location
# (UV coordinates) of a texture on a face. This class is particularly useful
# in determining how textures that have been manipulated using the Texture
# Tweaker should appear when exported to another file type
#
# Use the Face.get_UVHelper method to create a UVHelper for a given face.
# See the TextureWriter class as well.
#
class TC_UVHelper < Test::Unit::TestCase

  # Setup for test cases, if required.
  #
  def setup

  end

  # ----------------------------------------------------------------------------
  # @par Ruby Method:    UVHelper.get_front_UVQ
  # @file                ruvhelper.cpp
  #
  # The get_front_UVQ method is used to get the UV coordinates for a front
  # of a face.
  #
  #
  # Args:
  # - point: A Point3D object containing one of the 3D vertexes of the
  # face.
  #
  # Returns:
  # - point: a Point3D containing the UV coordinates where
  # the X value is the U value, the Y value is the V value
  # and the Z value is a Q value (which is not used).
  #

  # Test the example code that we have in the API documentation.
  def test_get_front_uvq_api_example
    pts = []
    pts[0] = [0, 0, 0]
    pts[1] = [9, 0, 0]
    pts[2] = [9, 9, 0]
    pts[3] = [0, 9, 0]

    # Add the face to the entities in the model
    face = Sketchup.active_model.entities.add_face pts
    my_texture_writer = Sketchup.create_texture_writer
    assert_nothing_raised do
     uv_helper = face.get_UVHelper true, true, my_texture_writer
     face.outer_loop.vertices.each do |vert|
       uvq = uv_helper.get_front_UVQ(vert.position)
       puts "u=" + uvq.x.to_s + " v=" + uvq.y.to_s
     end
    end
  end


  # ----------------------------------------------------------------------------
  # @par Ruby Method:    UVHelper.get_back_UVQ
  # @file                ruvhelper.cpp
  #
  # The get_back_UVQ method is used to get the UV coordinates for the back
  # of a face.
  #
  #
  # Args:
  # - point: A Point3D object containing one of the 3D vertexes of the
  # face.
  #
  # Returns:
  # - point: a Point3D containing the UV coordinates where
  # the X value is the U value, the Y value is the V value
  # and the Z value is a Q value (which is not used).
  #

  # Test the example code that we have in the API documentation.
  def test_get_back_uvq_api_example
    pts = []
    pts[0] = [0, 0, 0]
    pts[1] = [9, 0, 0]
    pts[2] = [9, 9, 0]
    pts[3] = [0, 9, 0]

    # Add the face to the entities in the model
    face = Sketchup.active_model.entities.add_face pts
    my_texture_writer = Sketchup.create_texture_writer

    assert_nothing_raised do
     uv_helper = face.get_UVHelper true, true, my_texture_writer
     face.outer_loop.vertices.each do |vert|
       uvq = uv_helper.get_back_UVQ(vert.position)
       puts "u=" + uvq.x.to_s + " v=" + uvq.y.to_s
     end
    end
  end


end
