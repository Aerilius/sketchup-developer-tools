# Copyright:: Copyright 2012 Trimble Navigation Ltd.
# License:: Apache License version 2.0
# Original Author:: Scott Lininger 
#
# Tests the SketchUp Ruby API TextureWriter object.
#
# This file was originally generated by ourdoc.rb, an internal tool we developed
# specifically for outputting support files (documentation, unit tests, etc.)
# from the standard, doxygen-style c++ comments that are embedded into the
# Ruby implementation files. You can find ourdoc.rb alongside these
# implementation files at:
#
# googleclient/sketchup/source/sketchup/ruby
#

require 'test/unit'

# TC_TextureWriter contains unit tests for the TextureWriter class.
#
# API Object::       TextureWriter
# C++ File::         rtexturewriter.cpp
# Parent Class::     Object
# Version::          SketchUp 6.0
#
# The TextureWriter class is used primarily for writing the textures used in a
# SketchUp model out to files as part of an export for use in another
# application. These methods are usually invoked in this order:
#
#   1. load - load one or more textures, each in the SketchUp model, into the
#      TextureWriter object.
#
#   2. write_all or write - write all of the loaded textures (or individual
#      textures) to files.
#
class TC_TextureWriter < Test::Unit::TestCase

  # Setup for test cases, if required.
  #
  def setup

  end

  # ----------------------------------------------------------------------------
  # @par Ruby Method:    TextureWriter.filename
  # @file                rtexturewriter.cpp
  #
  # The filename method is used to retrieve the original filename for a
  # particular texture.
  #
  #
  # Args:
  # - handle: The index or handle of the texture in the texture writer.
  #
  # Returns:
  # - filename: the filename of the texture on the file
  # system
  #

  # Test the example code that we have in the API documentation.
  def test_filename_api_example
    tw = Sketchup.create_texture_writer
    assert_nothing_raised do
     filename = tw.filename 1
    end
  end



  # ----------------------------------------------------------------------------
  # @par Ruby Method:    TextureWriter.handle
  # @file                rtexturewriter.cpp
  #
  # The handle method is used to retrieve a handle or index for a specific
  # texture in the texture writer.
  #
  #
  #
  # Args:
  # - entity: A face, image, component instance, group, or layer.
  # - side: If the entity is a face, the side represents the side whose
  # handle you are retrieving (true if front, false if back.)
  #
  # Returns:
  # - handle: the index for the entity in the texture
  # writer.
  #

  # Test the example code that we have in the API documentation.
  def test_handle_api_example
    tw = Sketchup.create_texture_writer
    layer = Sketchup.active_model.layers[0]
    assert_nothing_raised do
     index = tw.handle layer
    end
  end


  # ----------------------------------------------------------------------------
  # @par Ruby Method:    TextureWriter.write
  # @file                rtexturewriter.cpp
  #
  # The write method is used to write an individual textures, within the
  # texture writer, to a file.
  #
  # This method will return one of the following status messages. (These
  # are constants that are defined by the API.)
  #
  # - (0) FILE_WRITE_OK
  # - (1) FILE_WRITE_FAILED_INVALID_TIFF
  # - (2) FILE_WRITE_FAILED_UNKNOWN
  #
  #
  # Args:
  # - entity: A face, image, component instance, group, or layer to write.
  # - filename: The name of the file to contain the texture.
  # - side: If the entity is a face, the side is used to indicate the side
  # of the face being written (true if front, false if back.)
  #
  # Returns:
  # - status: one of three status messages (see comments.)
  #

  

  # ----------------------------------------------------------------------------
  # @par Ruby Method:    TextureWriter.write_all
  # @file                rtexturewriter.cpp
  #
  # The write_all method is used to write all of the textures within the
  # texture writer to files.
  #
  #
  # Args:
  # - entity: A face, image, component instance, group, or layer to write.
  # - dirname: The directory to write to.
  # - side: If the entity is a face, the side is used to indicate the side
  # of the face being written (true if front, false if back.)
  #
  # Returns:
  # - status: one of three status messages (see comments.)
  #

  

  # ----------------------------------------------------------------------------
  # @par Ruby Method:    TextureWriter.length
  # @file                rtexturewriter.cpp
  #
  # The length method is used to determine the number of textures loaded
  # into the texture writer. This is an alias of the count method.
  #
  #
  # Args:
  #
  # Returns:
  # - length: the number of textures loaded in the texture
  # writer
  #

  # Test the example code that we have in the API documentation.
  def test_length_api_example
    texturewriter = Sketchup.create_texture_writer
    assert_nothing_raised do
     length = texturewriter.length
    end
  end


  # ----------------------------------------------------------------------------
  # @par Ruby Method:    TextureWriter.count
  # @file                rtexturewriter.cpp
  #
  # The count method is used to determine the number of textures loaded
  # into the texture writer.
  #
  #
  # Args:
  #
  # Returns:
  # - count: the number of textures loaded in the texture
  # writer
  #

  # Test the example code that we have in the API documentation.
  def test_count_api_example
    tw = Sketchup.create_texture_writer
    assert_nothing_raised do
     count = tw.count
    end
  end


  # ----------------------------------------------------------------------------
  # @par Ruby Method:    TextureWriter.load
  # @file                rtexturewriter.cpp
  #
  # The load method is used to load one or more textures into the texture
  # writer for writing out to a file.
  #
  #
  # Args:
  # - entity: A face, image, component instance, group, or layer to load.
  # - side: If the entity is a face, the side is used to indicate the side
  # of the face being loaded (true if front, false if back).
  #
  # Returns:
  # - handle: the index or handle of the entity that was
  # loaded
  #

  # Test the example code that we have in the API documentation.
  def test_load_api_example
    tw = Sketchup.create_texture_writer
    layer = Sketchup.active_model.layers[0]
    assert_nothing_raised do
     index = tw.load layer
    end
  end

end
